<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
      xmlns:http="http://cxf.apache.org/transports/http/configuration"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://cxf.apache.org/jaxws
          http://cxf.apache.org/schemas/jaxws.xsd">

   <bean id="client" class="org.madbit.doubleit.DoubleItPortType" 
        factory-bean="clientFactory" factory-method="create"/>
        
   <bean id="clientFactory" class="org.apache.cxf.jaxws.JaxWsProxyFactoryBean">
     <property name="serviceClass" value="org.madbit.doubleit.DoubleItPortType"/>
     <property name="address" value="http://localhost:8080/spring-soap-x509/services/doubleIt"/>
       <property name="inInterceptors">
         <list>
            <ref bean="TimestampSignEncrypt_Response"/>
         </list>
       </property>
       <property name="outInterceptors">
         <list>
            <ref bean="TimestampSignEncrypt_Request"/>
         </list>
       </property>
   </bean>

    <!-- 
        This bean is an Out interceptor which will add a timestamp, 
        sign the timestamp and body, and then encrypt the timestamp 
        and body.  It uses 3DES as the symmetric key algorithm.
    -->
    <bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor" id="TimestampSignEncrypt_Request">
        <constructor-arg>
            <map>
                <entry key="action" value="Timestamp Signature Encrypt"/>
                <entry key="user" value="myclientkey"/>
                <entry key="signaturePropFile" value="clientKeystore.properties"/>
                <entry key="encryptionPropFile" value="clientKeystore.properties"/>
                <entry key="encryptionUser" value="myservicekey"/>
                <entry key="passwordCallbackClass" value="org.madbit.soapsecurity.ClientKeystorePasswordCallback"/>
                <entry key="signatureParts" value="{Element}{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd}Timestamp;{Element}{http://schemas.xmlsoap.org/soap/envelope/}Body"/>
                <entry key="encryptionParts" value="{Element}{http://www.w3.org/2000/09/xmldsig#}Signature;{Content}{http://schemas.xmlsoap.org/soap/envelope/}Body"/>
                <entry key="encryptionSymAlgorithm" value="http://www.w3.org/2001/04/xmlenc#tripledes-cbc"/>
            </map>
        </constructor-arg>
    </bean>
    
    <!--    
        This bean is an In interceptor which will validate a signed,    
         encrypted response, and timestamp it.    
    -->
    <bean class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor" id="TimestampSignEncrypt_Response">
        <constructor-arg>
            <map>
                <entry key="action" value="Timestamp Signature Encrypt"/>
                <entry key="signaturePropFile" value="clientKeystore.properties"/>
                <entry key="decryptionPropFile" value="clientKeystore.properties"/>
                <entry key="passwordCallbackClass" value="org.madbit.soapsecurity.ClientKeystorePasswordCallback"/>
            </map>
        </constructor-arg>
    </bean>

</beans>

